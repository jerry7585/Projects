From 532c5635c2406c606060bd7abc67147258d1b266 Mon Sep 17 00:00:00 2001
From: Jerry Su <jerrysu.nyc@gmail.com>
Date: Fri, 1 Jul 2022 04:11:03 +0000
Subject: [PATCH] Create Patch File

---
 client3.py | 50 +++++++++++++++++++++++++++++++-------------------
 1 file changed, 31 insertions(+), 19 deletions(-)

diff --git a/client3.py b/client3.py
index f1771c3..928a45b 100644
--- a/client3.py
+++ b/client3.py
@@ -1,3 +1,13 @@
+#This is where you would manually type the existing code in the client3.py, which is inside the jpm_module_1 folder (disregard copying the useless comments) so that you can avoid the dreaded tab editing issues in REPL particularly for the Python environment only
+
+#After manually copying the useful code in client3.py, you can make your changes here
+
+#Before you test your modified code is working, make sure you have done the initial steps needed to be done before making changes in the instruction slides
+
+#Then, to test, first, delete the client3.py file inside jpm_module_1. Then rename this file to just client3.py. Finally move this file inside the jpm_module_1 folder  
+
+# Delete these comments when you're done...
+# Comments are anything that's preceded with '#'
 ################################################################################
 #
 #  Permission is hereby granted, free of charge, to any person obtaining a
@@ -30,30 +40,32 @@ QUERY = "http://localhost:8080/query?id={}"
 N = 500
 
 def getDataPoint(quote):
-	""" Produce all of the needed values to generate a datapoint """
-	""" ------------- Update this function ------------- """
-	stock = quote['stock']
-	bid_price = float(quote['top_bid']['price'])
-	ask_price = float(quote['top_ask']['price'])
-	price = bid_price
-	return stock, bid_price, ask_price, price
+  """ Produce all of the needed values to generate a datapoint """
+  """ ------------- Update this function ------------- """
+  stock = quote['stock']
+  bid_price = float(quote['top_bid']['price'])
+  ask_price = float(quote['top_ask']['price'])
+  price = (ask_price + bid_price)/2
+  return stock, bid_price, ask_price, price
 
 def getRatio(price_a, price_b):
-	""" Get ratio of price_a and price_b """
-	""" ------------- Update this function ------------- """
-	""" Also create some unit tests for this function in client_test.py """
-	return 1
+  """ Get ratio of price_a and price_b """
+  """ ------------- Update this function ------------- """
+  """ Also create some unit tests for this function in client_test.py """
+  return price_a/price_b
 
 # Main
 if __name__ == "__main__":
 
-	# Query the price once every N seconds.
-	for _ in iter(range(N)):
-		quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
+  # Query the price once every N seconds.
+  for _ in range(N):
+    quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
 
-		""" ----------- Update to get the ratio --------------- """
-		for quote in quotes:
-			stock, bid_price, ask_price, price = getDataPoint(quote)
-			print ("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
+    """ ----------- Update to get the ratio --------------- """ 
+    prices = {} 
+    for quote in quotes:
+      stock, bid_price, ask_price, price = getDataPoint(quote)
+      prices[stock] = price
+      print ("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
 
-		print ("Ratio %s" % getRatio(price, price))
+    print ("Ratio %s" % getRatio(prices['ABC'], prices['DEF']))
-- 
2.17.1

